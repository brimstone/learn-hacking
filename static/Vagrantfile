# Lots of inspiration from:
# https://github.com/rgl/windows-domain-controller-vagrant
# https://github.com/UNT-CAS/Vagrant-AD-Lab
# https://github.com/clong/DetectionLab

boxes = [
 {
  :name => "DC1",
  :image => "brimstone/eval-win2016-standard-nocm",
  :memory => 2048,
  :ip => "192.168.56.2",
  :os => "windows",
  :scripts => [
   "domain-controller.ps1",
   "domain-controller-configure.ps1",
   "general.ps1",
  ]
 },
 {
  :name => "station1",
  :image => "brimstone/eval-win10x64-enterprise-nocm",
  :memory => 2048,
  :ip => "192.168.56.3",
  :gateway => "192.168.56.2",
  :dns => "192.168.56.2",
  :os => "windows",
  :scripts => [
   "domainjoin.ps1",
   "autologin-tony.ps1",
   "general.ps1",
  ]
 },
 {
  :name => "station2",
  :image => "brimstone/eval-win7x86-enterprise-nocm",
  :memory => 2048,
  :ip => "192.168.56.4",
  :gateway => "192.168.56.2",
  :dns => "192.168.56.2",
  :os => "windows",
  :scripts => [
   "domainjoin.ps1",
   "autologin-tony.ps1",
   "general.ps1",
  ]
 },
 {
  :name => "web1",
  :image => "brimstone/eval-win2012r2-standard-nocm",
  :memory => 2048,
  :ip => "192.168.56.5",
  :gateway => "192.168.56.2",
  :dns => "192.168.56.2",
  :os => "windows",
  :scripts => [
   "domainjoin.ps1",
   "blog.ps1",
   "general.ps1",
  ]
 },
 {
  :name => "attacker",
  :image => "kalilinux/rolling",
  :memory => 2048,
  :ip => "192.168.56.100",
  :gateway => "192.168.56.2",
  :dns => "192.168.56.2",
  :scripts => []
 }
]

Vagrant.configure("2") do |config|
 boxes.each do |box|
  config.vm.define box[:name] do |cfg|
   cfg.vm.box = box[:image]
   cfg.vm.boot_timeout = 1800

   cfg.vm.hostname = box[:name]

   # use the plaintext WinRM transport and force it to use basic authentication.
   cfg.winrm.transport = :plaintext
   cfg.winrm.basic_auth_only = true

   if not ENV["VAGRANT_PASS"].nil?
     cfg.winrm.password = ENV["VAGRANT_PASS"]
   end

   if box[:os] == "windows"
     cfg.vm.communicator = "winrm"
   end
   if box[:gateway]
    cfg.vm.network :private_network, ip: box[:ip], gateway: box[:gateway], dns: box[:dns]
   else
    cfg.vm.network :private_network, ip: box[:ip]
   end

   box[:scripts].each do |script|
    if File.file?("scripts/" + script)
     cfg.vm.provision "shell", path: "scripts/" + script
     cfg.vm.provision "shell", reboot: true
    else
     cfg.vm.provision "shell", inline: script
    end
   end

   cfg.vm.provider "virtualbox" do |vb, override|
    vb.gui = false
    vb.customize ["modifyvm", :id, "--memory", box[:memory]]
    vb.customize ["modifyvm", :id, "--cpus", 2]
    vb.customize ["modifyvm", :id, "--vram", "32"]
    vb.customize ["modifyvm", :id, "--clipboard-mode", "bidirectional"]
    vb.customize ["setextradata", "global", "GUI/SuppressMessages", "all"]
   end
  end
 end

end
